{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nvar asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function wrap(fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function _await(value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar imgWithClick = {\n  cursor: 'pointer'\n};\n\nvar Photo = function Photo(_ref) {\n  var index = _ref.index,\n      onClick = _ref.onClick,\n      photo = _ref.photo,\n      margin = _ref.margin,\n      direction = _ref.direction,\n      top = _ref.top,\n      left = _ref.left;\n  var imgStyle = {\n    margin: margin\n  };\n\n  if (direction === 'column') {\n    imgStyle.position = 'absolute';\n    imgStyle.left = left;\n    imgStyle.top = top;\n  }\n\n  var handleClick = function handleClick(event) {\n    onClick(event, {\n      photo: photo,\n      index: index\n    });\n  };\n\n  return React.createElement('img', _extends({\n    style: onClick ? _extends({}, imgStyle, imgWithClick) : imgStyle\n  }, photo, {\n    onClick: onClick ? handleClick : null\n  }));\n};\n\nvar photoPropType = PropTypes.shape({\n  src: PropTypes.string.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  alt: PropTypes.string,\n  title: PropTypes.string,\n  srcSet: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sizes: PropTypes.oneOfType([PropTypes.string, PropTypes.array])\n});\nPhoto.propTypes = {\n  index: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  photo: photoPropType.isRequired,\n  margin: PropTypes.number,\n  top: function top(props) {\n    if (props.direction === 'column' && typeof props.top !== 'number') {\n      return new Error('top is a required number when direction is set to `column`');\n    }\n  },\n  left: function left(props) {\n    if (props.direction === 'column' && typeof props.left !== 'number') {\n      return new Error('left is a required number when direction is set to `column`');\n    }\n  },\n  direction: PropTypes.string\n};\n\nfunction round(value, decimals) {\n  if (!decimals) decimals = 0;\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n} // return two decimal places rounded number\n\n\nfunction ratio(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return round(width / height, 2);\n} // takes the Gallery's photos array, width of the container,\n// margin between photos Gallery prop, and columns Gallery prop.\n// calculates, sizes based on columns and returns the photos array\n// with new height/width props in each object\n\n\nfunction computeSizes(_ref2) {\n  var photos = _ref2.photos,\n      columns = _ref2.columns,\n      width = _ref2.width,\n      margin = _ref2.margin;\n\n  if (!width) {\n    return [];\n  } // divide photos over rows, max cells based on `columns`\n  // effectively resulting in [[0, 1, 2], [3, 4, 5], [6, 7]]\n\n\n  var rows = photos.reduce(function (acc, cell, idx) {\n    var row = Math.floor(idx / columns);\n    acc[row] = acc[row] ? [].concat(toConsumableArray(acc[row]), [cell]) : [cell]; // eslint-disable-line no-param-reassign\n\n    return acc;\n  }, []); // calculate total ratio of each row, and adjust each cell height and width\n  // accordingly.\n\n  var ratios = [];\n  var rowsWithSizes = rows.map(function (row, rowIndex) {\n    var totalRatio = row.reduce(function (result, photo) {\n      return result + ratio(photo);\n    }, 0);\n    var rowWidth = width - row.length * (margin * 2); // save total ratio of each row\n\n    if (rowIndex !== rows.length - 1) ratios.push(totalRatio); // assign height\n    // 3 scenarios...\n    //  if its a regular row where row.length === columns\n    //    rowWidth / totalRatio\n    //  if columns > row.length\n    //    if !lastRow\n    //      use the average aspect ratio of previous rows\n    //    else (all photos are on a single row)\n    //      ...\n\n    var height = row.length === columns ? rowWidth / totalRatio : photos.length < columns ? rowWidth / totalRatio * (row.length / columns) : rowWidth / (ratios.reduce(function (acc, item) {\n      return acc + item;\n    }, 0) / (rows.length - 1));\n    return row.map(function (photo) {\n      return _extends({}, photo, {\n        height: round(height, 1),\n        width: round(height * ratio(photo), 1)\n      });\n    });\n  });\n  return rowsWithSizes.reduce(function (acc, row) {\n    return [].concat(toConsumableArray(acc), toConsumableArray(row));\n  }, []);\n}\n\nfunction computeSizesColumns(_ref3) {\n  var photos = _ref3.photos,\n      columns = _ref3.columns,\n      width = _ref3.width,\n      margin = _ref3.margin; // calculate each colWidth based on total width and column amount\n\n  var colWidth = (width - margin * 2 * columns) / columns; // map through each photo to assign adjusted height and width based on colWidth\n\n  var photosWithSizes = photos.map(function (photo) {\n    var newHeight = photo.height / photo.width * colWidth;\n    return _extends({}, photo, {\n      width: round(colWidth, 1),\n      height: round(newHeight, 1)\n    });\n  }); // store all possible left positions\n  // and current top positions for each column\n\n  var colLeftPositions = [];\n  var colCurrTopPositions = [];\n\n  for (var i = 0; i < columns; i++) {\n    colLeftPositions[i] = round(i * (colWidth + margin * 2), 1);\n    colCurrTopPositions[i] = 0;\n  } // map through each photo, then reduce thru each \"column\"\n  // find column with the smallest height and assign to photo's 'top'\n  // update that column's height with this photo's height\n\n\n  var photosPositioned = photosWithSizes.map(function (photo) {\n    var smallestCol = colCurrTopPositions.reduce(function (acc, item, i) {\n      acc = item < colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n    photo.top = colCurrTopPositions[smallestCol];\n    photo.left = colLeftPositions[smallestCol];\n    colCurrTopPositions[smallestCol] = colCurrTopPositions[smallestCol] + photo.height + margin * 2; // store the tallest col to use for gallery height because of abs positioned elements\n\n    var tallestCol = colCurrTopPositions.reduce(function (acc, item, i) {\n      acc = item > colCurrTopPositions[acc] ? i : acc;\n      return acc;\n    }, 0);\n    photo.containerHeight = colCurrTopPositions[tallestCol];\n    return photo;\n  });\n  return photosPositioned;\n}\n\nvar Gallery = function (_React$Component) {\n  inherits(Gallery, _React$Component);\n\n  function Gallery() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Gallery);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = Gallery.__proto__ || Object.getPrototypeOf(Gallery)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      containerWidth: 0\n    }, _this.handleClick = function (event, _ref2) {\n      var index = _ref2.index;\n      var _this$props = _this.props,\n          photos = _this$props.photos,\n          onClick = _this$props.onClick;\n      onClick(event, {\n        index: index,\n        photo: photos[index],\n        previous: photos[index - 1] || null,\n        next: photos[index + 1] || null\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(Gallery, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.animationFrameID = null;\n      this.observer = new ResizeObserver(function (entries) {\n        // only do something if width changes\n        var newWidth = entries[0].contentRect.width;\n\n        if (_this2.state.containerWidth !== newWidth) {\n          // put in an animation frame to stop \"benign errors\" from\n          // ResizObserver https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n          _this2.animationFrameID = window.requestAnimationFrame(function () {\n            _this2.setState({\n              containerWidth: Math.floor(newWidth)\n            });\n          });\n        }\n      });\n      this.observer.observe(this._gallery);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.observer.disconnect();\n      window.cancelAnimationFrame(this.animationFrameID);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var containerWidth = this.state.containerWidth; // no containerWidth until after first render with refs, skip calculations and render nothing\n\n      if (!containerWidth) return React.createElement('div', {\n        ref: function ref(c) {\n          return _this3._gallery = c;\n        }\n      }, '\\xA0');\n      var _props$ImageComponent = this.props.ImageComponent,\n          ImageComponent = _props$ImageComponent === undefined ? Photo : _props$ImageComponent; // subtract 1 pixel because the browser may round up a pixel\n\n      var _props = this.props,\n          margin = _props.margin,\n          onClick = _props.onClick,\n          direction = _props.direction;\n      var columns = this.props.columns; // set default breakpoints if user doesn't specify columns prop\n\n      if (columns === undefined) {\n        columns = 1;\n        if (containerWidth >= 500) columns = 2;\n        if (containerWidth >= 900) columns = 3;\n        if (containerWidth >= 1500) columns = 4;\n      }\n\n      var photos = this.props.photos;\n      var width = containerWidth - 1;\n      var galleryStyle = void 0,\n          thumbs = void 0;\n\n      if (direction === 'row') {\n        galleryStyle = {\n          display: 'flex',\n          flexWrap: 'wrap',\n          flexDirection: 'row'\n        };\n        thumbs = computeSizes({\n          width: width,\n          columns: columns,\n          margin: margin,\n          photos: photos\n        });\n      }\n\n      if (direction === 'column') {\n        galleryStyle = {\n          position: 'relative'\n        };\n        thumbs = computeSizesColumns({\n          width: width,\n          columns: columns,\n          margin: margin,\n          photos: photos\n        });\n        galleryStyle.height = thumbs[thumbs.length - 1].containerHeight;\n      }\n\n      return React.createElement('div', {\n        className: 'react-photo-gallery--gallery'\n      }, React.createElement('div', {\n        ref: function ref(c) {\n          return _this3._gallery = c;\n        },\n        style: galleryStyle\n      }, thumbs.map(function (photo, index) {\n        var left = photo.left,\n            top = photo.top,\n            containerHeight = photo.containerHeight,\n            rest = objectWithoutProperties(photo, ['left', 'top', 'containerHeight']);\n        return React.createElement(ImageComponent, {\n          key: photo.key || photo.src,\n          margin: margin,\n          index: index,\n          photo: rest,\n          direction: direction,\n          left: left,\n          top: top,\n          onClick: onClick ? _this3.handleClick : null\n        });\n      })));\n    }\n  }]);\n  return Gallery;\n}(React.Component);\n\nGallery.propTypes = {\n  photos: PropTypes.arrayOf(photoPropType).isRequired,\n  direction: PropTypes.string,\n  onClick: PropTypes.func,\n  columns: PropTypes.number,\n  margin: PropTypes.number,\n  ImageComponent: PropTypes.func\n};\nGallery.defaultProps = {\n  margin: 2,\n  direction: 'row'\n};\nexport default Gallery;","map":null,"metadata":{},"sourceType":"module"}